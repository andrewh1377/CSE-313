;Class: CSE 313 Machine Organization Lab

;Term: Fall 2016
;Name(s): Steven Tang and Andrew Hedy

;Group #9

;Lab#7: Computing Days of the week

;Description: This program takes the day, month, and year to come up with a day of the week that 
	     ;specific day lands on. For example, if we were to input March 19th 1988 into the correct
	     ;memory locations the print screen would output the day Saturday. This was done by using
	     ;Zeller's formula  to multiply and divide multiple variables the user inputs. Each 
	     ;label (eg First, second, third,...) are not actual labels that have any use for this program
	     ;these are strictly steps to help navigate through the program. 	

.ORIG x3000


FIRST	LDI R3, M 		;LOAD MONTH INTO R3		
	LDI R4, Y           	;LOAD YEAR INTO R4	
	ADD R0, R0, R3		;ADD R0 AND R3 AND STORE IN R0		
	JSR MONTH
		;JUMP TO SUBROUTINE MONTH
	ST R0, SAVEREG		;SAVING R0 (M)	
		


SECOND	AND R0, R0, #0
		;CHECKING R0
	ADD R0, R0, R4		;ADDING R4 TO R0
		
	JSR SEPERATE			
		
	ST R1, SAVEREG1		;SAVING R1 (CENTURY)	
		
	ST R0, SAVEREG2	
	;SAVING R0 (YEAR)	
	


THIRD	LD R0, SAVEREG		;LOADING R0 (M)	
		
	ADD R0, R0, #1		;ADDING 1 TO R0 AND STORING IN R0 (M+1)	
		
	AND R1, R1, #0
		;CLEARING R1
	ADD R1, R1, #13
		;ADDING 13 TO R1 AND STORING IN R1
	AND R2, R2, #0		;CLEARING R2	
		
	JSR MULT		;JUMP TO SUBROUTINE MULT	
		


FOURTH	AND R0, R0, #0
		;CLEARING R0
	AND R1, R1, #0
		;CLEARING R1
	ADD R0, R0, R2  	;ADDING R0 TO R2 AND STORING IN R0	
		
	ADD R1, R1, #5
		;ADDING 5 TO R1
	NOT R1, R1
		;NEGATING R1
	ADD R1, R1, #1
		;ADDING 1 TO R1 FOR 2'S COMPLEMENT
	AND R2, R2, #0		;CLEARING R2	
		
	JSR DIV			
;JUMP TO SUBROUTINE DIV		
        


FIFTH	LDI R0, K		;LOADING VALUE OF K INTO R0	
	ADD R6, R0, R2		;ADDING R0 AND R2 AND STORING IN R6	
		
       


SIXTH  	LD R0, SAVEREG2		;SAVING R0	
		
	ADD R6, R6, R0		

	;CALCULATING D/4

SEVEN	AND R1, R1, #0
		;CHECKING R1	
	ADD R1, R1, #4
		;ADDING 4 TO R1 AND STORING IN R1	
	AND R2, R2, #0
		;CHECKING R2	
	NOT R1, R1
		;NEGATING R1
	ADD R1, R1, #1
		;ADDING #1 TO R1 TO MAKE IT 2'S COMPLEMENT
	JSR DIV			
;JUMP TO SUBROUTINE DIV		


EIGHT	ADD R6, R6, R2
		;ADDING R6 AND R2 AND STORING IN R6
	LD R0, SAVEREG1		;LOADING SAVED VALUES	
		
	AND R1, R1, #0
		;CLEARING R1
	ADD R1, R1, #2
		;ADDING 2 TO R1
	AND R2, R2, #0
		;CLEARING R2
	JSR MULT
		;JUMP TO SUBROUTINE MULT
	NOT R2, R2
		;NEGATING R2
	ADD R2, R2, #1
		;ADDING 1 TO R2 FOR 2'S COMPLEMENT
	ADD R6, R6, R2		;ADDING R6 AND R2 AND STORING IN R6	



NINE	
AND R1, R1, #0
		;CLEARING R1
	ADD R1, R1, #4
		;ADDING 4 TO R1
	NOT R1, R1
		;NEGATING R1
	ADD R1, R1, #1
		;ADDING 1 TO R1 FOR 2'S COMPLEMENT
	AND R2, R2, #0
		;CLEARING R2
	JSR DIV			;JUMP TO SUBROUTINE DIV   
		
		
	
	ADD R6, R6, R2		;ADDING R6 TO R2 AND STORING IN R6
		
	AND R0, R0, #0
		;CLEARING R0
	AND R1, R1, #0
		;CLEARING R1
	AND R2, R2, #0
		;CLEARING R2
	ADD R0, R0, R6
		;ADDING R0 AND R6 AND STORING IN R0
	ADD R1, R1, #7
		;ADDING 7 TO R1
	NOT R1, R1
		;NEGATING R1
	ADD R1, R1, #1
		;ADDING 1 TO R1 FOR 2'S COMPLEMENT
	JSR DIV			
;JUMP TO SUBROUTINE DIV		
	ADD R3, R0, #0
		;ADDING R0 TO R3
	STI R3, FINAL
		
;STORE R3 INTO LABEL 'FINAL'		
	LEA R0, DAYS		;
	

LOOPS	ADD R3, R3, #0
		;CHECK R3
	BRz PRINT
		;IF ZERO BRANCH TO PRINT
	ADD R0, R0, #10
		;ADD 10 TO R0
	ADD R3, R3, #-1
		;DECREMENT R3
	BR LOOPS
		;LOOP THROUGH AGAIN
PRINT	PUTS
			;PRINTS DAY TO SCREEN
	
HALT

		

MONTH	ADD R0, R0, #-2
		;ADDING -2 TO MONTH TO CHECK	
	BRnz	MONTH1		;IF NEGATIVE OR ZERO JUMP TO MONTH1	
		
	BRp	MONTH2		;IF POSITIVE JUMP TO MONTH2	


MONTH1	ADD R0, R0, #14		;THIS IS THE FORMULA GIVIN IN LAB MANUAL	
		
	ADD R4, R4, #-1
		
	RET
	

MONTH2	ADD R0, R0, #2		;ADDS 2 TO GET BACK TO ORIGINAL INPUT	
		
	RET



SEPERATE	
	AND R3, R3, x0		
		
	ADD R3, R3, #15
		
	ADD R3, R3, #15
		
	ADD R3, R3, #15
		
	ADD R3, R3, #15
		
	ADD R3, R3, #15
		
	ADD R3, R3, #15
		
	ADD R3, R3, #10
		
		
	NOT R3, R3
		
	ADD R3, R3, #1
		
	AND R2, R2, #0		;REMAINDER		
		
	AND R1, R1, #0		;QUOTIENT		
		
	BR SEPLOOP


SEPLOOP	ADD R0, R0, R3		;ADDING R0 TO R3 AND STORING IN R8	
		
	BRnz SEPEND
		;ONCE ZERO OR NEGATIVE THE LOOP ENDS	
	ADD R1, R1, #1		
;INCREMENTING R1		
	BR SEPLOOP		;KEEP LOOPING

SEPEND	NOT R3, R3
		;NEGATING R3
	ADD R3, R3, #1
		;ADDING 1 TO R3 FOR 2'S COMPLEMENT
	ADD R0, R0, R3		;ADDING R8 AND R3 AND STORING IN R0	
		
	ADD R2, R0, R3		;ADD R8 TO R3 AND STORE IN R2	
		
	RET
			;RETURN FROM SUBROUTINE

MULT	ADD R2, R2, R0
		;ADDING R2 AND R0 AND STORING IN R2	
	ADD R1, R1, #-1
		;DECREMENTING R1
	BRz RETURN
		;IF R1 IS ZERO JUMP TO RETURN
	BR MULT			;OTHERWISE LOOP THROUGH AGAIN
		
DIV	ADD R0, R0, R1
		;ADDING R0 TO R1 AND STORING IN R0
	ADD R2, R2, #1
		;COMPARE X AND Y
		
	AND R3, R3, #0
		;CLEARING R3
	ADD R3, R0, R1
		;ADDING R0 AND R1 AND STORING IN R3
	BRn RETURN
		;IF NEGATIVE RETURN FROM SUBROUTINE
	BR DIV
			;OTHERWISE BRANCH AND LOOP AGAIN	

	RETURN 	 RET



K	.FILL x31F0		;THE DAY IS FILLED INTO M[x31F0]
M	.FILL x31F1
		;THE MONTH IS FILLED INTO M[x31F1]
Y	.FILL x31F2		;THE YEAR IS FILLED INTO M[x31F2]
FINAL	.FILL x31F3		;THE ANSWER IS FILLED INTO M[x31F3]
SAVEREG	.FILL x0			

SAVEREG1  .FILL x0			

SAVEREG2  .FILL x0			


;CODE FROM LAB 3
DAYS	
	.STRINGZ "Saturday "
		
	.STRINGZ "Sunday   "
		
	.STRINGZ "Monday   "
		
	.STRINGZ "Tuesday  "
		
	.STRINGZ "Wednesday"
		
	.STRINGZ "Thursday "
		
	.STRINGZ "Friday   "
				

.END 




